{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daev\\\\Desktop\\\\intern\\\\intern\\\\src\\\\components\\\\Createclassroom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateClassroom = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [className, setClassName] = useState('');\n  const navigate = useNavigate();\n  const route = \"http://localhost:5000\";\n  useEffect(() => {\n    // Fetch all students from the database\n    axios.get(`${route}/api/getstudent`).then(response => setStudents(response.data)).catch(error => console.error('Error fetching students:', error));\n  }, []);\n  const handleCheckboxChange = event => {\n    const studentId = event.target.value;\n    setSelectedStudents(prevState => prevState.includes(studentId) ? prevState.filter(id => id !== studentId) : [...prevState, studentId]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const classroomData = {\n      name: className,\n      students: selectedStudents\n    };\n    try {\n      await axios.post(`${route}/api/createclassroom`, classroomData);\n      alert('Classroom created successfully');\n      navigate('/dashboard'); // Redirect to the dashboard or another page\n    } catch (error) {\n      console.error('Error creating classroom:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Classroom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Classroom Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: className,\n          onChange: e => setClassName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Students:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-name\",\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"btn-check\",\n              id: `btncheck${index}`,\n              value: student._id,\n              onChange: handleCheckboxChange,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"btn btn-outline-primary\",\n              htmlFor: `btncheck${index}`,\n              children: [student.name, \" (\", student.email, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, student._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-4\",\n        children: \"Create Classroom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateClassroom, \"qd8pISdKv6cQo39HjRmSmvowQoc=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateClassroom;\nexport default CreateClassroom;\nvar _c;\n$RefreshReg$(_c, \"CreateClassroom\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","CreateClassroom","_s","students","setStudents","selectedStudents","setSelectedStudents","className","setClassName","navigate","route","get","then","response","data","catch","error","console","handleCheckboxChange","event","studentId","target","value","prevState","includes","filter","id","handleSubmit","preventDefault","classroomData","name","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","e","required","map","student","index","Fragment","_id","autoComplete","htmlFor","email","_c","$RefreshReg$"],"sources":["C:/Users/daev/Desktop/intern/intern/src/components/Createclassroom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CreateClassroom = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [selectedStudents, setSelectedStudents] = useState([]);\r\n    const [className, setClassName] = useState('');\r\n    const navigate = useNavigate();\r\n    const route = \"http://localhost:5000\";\r\n\r\n    useEffect(() => {\r\n        // Fetch all students from the database\r\n        axios.get(`${route}/api/getstudent`)\r\n            .then(response => setStudents(response.data))\r\n            .catch(error => console.error('Error fetching students:', error));\r\n    }, []);\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        const studentId = event.target.value;\r\n        setSelectedStudents(prevState =>\r\n            prevState.includes(studentId)\r\n                ? prevState.filter(id => id !== studentId)\r\n                : [...prevState, studentId]\r\n        );\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const classroomData = {\r\n            name: className,\r\n            students: selectedStudents,\r\n        };\r\n\r\n        try {\r\n            await axios.post(`${route}/api/createclassroom`, classroomData);\r\n            alert('Classroom created successfully');\r\n            navigate('/dashboard'); // Redirect to the dashboard or another page\r\n        } catch (error) {\r\n            console.error('Error creating classroom:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Create Classroom</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Classroom Name:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        value={className} \r\n                        onChange={(e) => setClassName(e.target.value)} \r\n                        required \r\n                    />\r\n                </div>\r\n                <div className=\"form-group mt-4\">\r\n                    <label>Select Students:</label>\r\n                    <div className=\"student-name\">\r\n                        {students.map((student, index) => (\r\n                            <React.Fragment key={student._id}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"btn-check\"\r\n                                    id={`btncheck${index}`}\r\n                                    value={student._id}\r\n                                    onChange={handleCheckboxChange}\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                                <label className=\"btn btn-outline-primary\" htmlFor={`btncheck${index}`}>\r\n                                    {student.name} ({student.email})\r\n                                </label>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary mt-4\">Create Classroom</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateClassroom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}