{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daev\\\\Desktop\\\\intern\\\\intern\\\\src\\\\Context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useMemo } from 'react';\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(({\n  children\n}) => {\n  _s();\n  const [isloggedin, setIsLoggedIn] = useState(false);\n\n  // Example function to log in (could be from an API call)\n  const login = () => {\n    // Perform login logic\n    setIsLoggedIn(true);\n  };\n\n  // Example function to log out\n  const logout = () => {\n    // Perform logout logic\n    setIsLoggedIn(false);\n  };\n\n  // Memoize the context value to prevent unnecessary re-renders\n  const value = useMemo(() => ({\n    isloggedin,\n    login,\n    logout\n  }), [isloggedin]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}, \"rPc/3jS7xFj8nCsYEkbIJVwBiBY=\")), \"rPc/3jS7xFj8nCsYEkbIJVwBiBY=\");\n\n// Custom hook to use the AuthContext\n_c2 = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthProvider$React.memo\");\n$RefreshReg$(_c2, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useMemo","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_s","memo","_c","children","isloggedin","setIsLoggedIn","login","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c2","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/daev/Desktop/intern/intern/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useMemo } from 'react';\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = React.memo(({ children }) => {\r\n    const [isloggedin, setIsLoggedIn] = useState(false);\r\n\r\n    // Example function to log in (could be from an API call)\r\n    const login = () => {\r\n        // Perform login logic\r\n        setIsLoggedIn(true);\r\n    };\r\n\r\n    // Example function to log out\r\n    const logout = () => {\r\n        // Perform logout logic\r\n        setIsLoggedIn(false);\r\n    };\r\n\r\n    // Memoize the context value to prevent unnecessary re-renders\r\n    const value = useMemo(() => ({ isloggedin, login, logout }), [isloggedin]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n});\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,QAAQ,OAAO;;AAE3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,gBAAAC,EAAA,eAAGT,KAAK,CAACU,IAAI,CAAAC,EAAA,GAAAF,EAAA,CAAC,CAAC;EAAEG;AAAS,CAAC,KAAK;EAAAH,EAAA;EACrD,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMa,KAAK,GAAGA,CAAA,KAAM;IAChB;IACAD,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACjB;IACAF,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;;EAED;EACA,MAAMG,KAAK,GAAGb,OAAO,CAAC,OAAO;IAAES,UAAU;IAAEE,KAAK;IAAEC;EAAO,CAAC,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAE1E,oBACIP,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAL,QAAA,EAC9BA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC,kCAAC;;AAEF;AAAAC,GAAA,GAzBaf,YAAY;AA0BzB,OAAO,MAAMgB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOtB,UAAU,CAACI,WAAW,CAAC;AAClC,CAAC;AAACkB,GAAA,CAFWD,OAAO;AAAA,IAAAb,EAAA,EAAAY,GAAA;AAAAG,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAH,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}